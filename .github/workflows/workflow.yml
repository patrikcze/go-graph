name: Go Vet

on:
  push:
    branches:
      - dev
      - messatwork
      - main
      - korczis/*
      - patrikcze/*

  pull_request:
    branches:
      - dev
      - main
      - messatwork
      - korczis/*
      - patrikcze/*
    types:
      - opened
      - synchronize
    jobs:
      if: github.event.pull_request.head.repo.fork == true

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  vet:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18'

#      - name: golangci-lint
#        uses: golangci/golangci-lint-action@v3
#        with:
#          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
#          version: v1.29
#
#          # Optional: working directory, useful for monorepos
#          # working-directory: somedir
#
#          # Optional: golangci-lint command line arguments.
#          # args: --issues-exit-code=0
#
#          # Optional: show only new issues if it's a pull request. The default value is `false`.
#          # only-new-issues: true
#
#          # Optional: if set to true then the all caching functionality will be complete disabled,
#          #           takes precedence over all other caching options.
#          # skip-cache: true
#
#          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
#          # skip-pkg-cache: true
#
#          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
#          # skip-build-cache: true

      - name: Run go vet, lint, and revive
        run: make # `git diff --name-only origin/main`

#      - name: Build and push the Docker image
#        run: |
#          echo $(DOCKER_PASSWORD) | docker login --username $(DOCKER_USERNAME) --password-stdin
#          make build push